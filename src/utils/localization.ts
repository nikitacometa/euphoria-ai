import { IUser } from '../database';
import * as fs from 'fs';
import * as path from 'path';
import { 
  ILocalizationText, 
  getAllLocalizationTexts, 
  getLocalizationTextByKey,
  upsertLocalizationText,
  updateTranslation
} from '../database';

// Supported languages
export enum Language {
  ENGLISH = 'en',
  RUSSIAN = 'ru'
}

// Interface for text entries
export interface LocalizedText {
  [Language.ENGLISH]: string;
  [Language.RUSSIAN]: string;
}

// Type for text collections
export type TextCollection = {
  [key: string]: LocalizedText;
};

// Path to the localization files directory
const LOCALIZATION_DIR = path.join(process.cwd(), 'localization');

// Default texts as fallback
const defaultTexts: TextCollection = {
  // Onboarding
  languageSelection: {
    [Language.ENGLISH]: 'Please select your preferred language:',
    [Language.RUSSIAN]: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–π —è–∑—ã–∫:'
  },
  languageChanged: {
    [Language.ENGLISH]: 'Language has been changed to English.',
    [Language.RUSSIAN]: '–Ø–∑—ã–∫ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ —Ä—É—Å—Å–∫–∏–π.'
  },
  welcome: {
    [Language.ENGLISH]: '<b>Hey there, {firstName}!</b> üëã\n\nI\'m your personal journal buddy! I\'m here to help you reflect, grow, and have some fun along the way.\n\nBefore we dive in, I\'d love to get to know you better.\n\n<b>First things first</b> - what name would you like me to call you?',
    [Language.RUSSIAN]: '<b>–ü—Ä–∏–≤–µ—Ç, {firstName}!</b> üëã\n\n–Ø —Ç–≤–æ–π –ª–∏—á–Ω—ã–π –¥–Ω–µ–≤–Ω–∏–∫-–ø–æ–º–æ—â–Ω–∏–∫! –Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ —Ä–∞–∑–º—ã—à–ª—è—Ç—å, —Ä–∞—Å—Ç–∏ –∏ –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–∑–≤–ª–µ—á—å—Å—è.\n\n–ü—Ä–µ–∂–¥–µ —á–µ–º –º—ã –Ω–∞—á–Ω–µ–º, —è —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å —Ç–µ–±—è –ø–æ–ª—É—á—à–µ.\n\n<b>–î–ª—è –Ω–∞—á–∞–ª–∞</b> - –∫–∞–∫ —Ç–µ–±—è –Ω–∞–∑—ã–≤–∞—Ç—å?'
  },
  niceMeet: {
    [Language.ENGLISH]: '<b>Nice to meet you, {name}!</b> üòä\n\nHow old are you? Feel free to pick from these options:',
    [Language.RUSSIAN]: '<b>–ü—Ä–∏—è—Ç–Ω–æ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è, {name}!</b> üòä\n\n–°–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç? –í—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤:'
  },
  thanks: {
    [Language.ENGLISH]: '<b>Thanks!</b> And what gender do you identify as?',
    [Language.RUSSIAN]: '<b>–°–ø–∞—Å–∏–±–æ!</b> –ê –∫–∞–∫–æ–≥–æ —Ç—ã –ø–æ–ª–∞?'
  },
  gotIt: {
    [Language.ENGLISH]: '<b>Got it!</b> What do you do for work or study?',
    [Language.RUSSIAN]: '<b>–ü–æ–Ω—è—Ç–Ω–æ!</b> –ß–µ–º —Ç—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è - —Ä–∞–±–æ—Ç–∞–µ—à—å –∏–ª–∏ —É—á–∏—à—å—Å—è?'
  },
  almostDone: {
    [Language.ENGLISH]: '<b>Almost done!</b> Now for the fun part - tell me a bit more about yourself! üí´\n\nFeel free to share anything you want, like you\'re introducing yourself to a new friend (which I am, actually!).\n\nSome things you might want to share:\n\n<i>‚Ä¢ Where are you from?</i>\n<i>‚Ä¢ Where are you living now?</i>\n<i>‚Ä¢ Do you travel often?</i>\n<i>‚Ä¢ Are you in a relationship?</i>\n<i>‚Ä¢ What sports or physical activities do you enjoy?</i>\n<i>‚Ä¢ What are your hobbies?</i>\n<i>‚Ä¢ What are your dreams and goals?</i>\n<i>‚Ä¢ Do you have any pets?</i>\n<i>‚Ä¢ Any spiritual practices?</i>\n\nYou can reply with text, voice message, or even a video!',
    [Language.RUSSIAN]: '<b>–ü–æ—á—Ç–∏ –≥–æ—Ç–æ–≤–æ!</b> –¢–µ–ø–µ—Ä—å —Å–∞–º–æ–µ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ - —Ä–∞—Å—Å–∫–∞–∂–∏ –º–Ω–µ –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ! üí´\n\n–ú–æ–∂–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —á–µ–º —É–≥–æ–¥–Ω–æ, –∫–∞–∫ –±—É–¥—Ç–æ –∑–Ω–∞–∫–æ–º–∏—à—å—Å—è —Å –Ω–æ–≤—ã–º –¥—Ä—É–≥–æ–º (–∫–æ—Ç–æ—Ä—ã–º —è, —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ, –∏ —è–≤–ª—è—é—Å—å).\n\n–í–æ—Ç —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å —Ä–∞—Å—Å–∫–∞–∑–∞—Ç—å:\n\n<i>‚Ä¢ –û—Ç–∫—É–¥–∞ —Ç—ã —Ä–æ–¥–æ–º?</i>\n<i>‚Ä¢ –ì–¥–µ –∂–∏–≤–µ—à—å —Å–µ–π—á–∞—Å?</i>\n<i>‚Ä¢ –ß–∞—Å—Ç–æ –ª–∏ –ø—É—Ç–µ—à–µ—Å—Ç–≤—É–µ—à—å?</i>\n<i>‚Ä¢ –°–æ—Å—Ç–æ–∏—à—å –ª–∏ –≤ –æ—Ç–Ω–æ—à–µ–Ω–∏—è—Ö?</i>\n<i>‚Ä¢ –ö–∞–∫–∏–º–∏ –≤–∏–¥–∞–º–∏ —Å–ø–æ—Ä—Ç–∞ –∏–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?</i>\n<i>‚Ä¢ –ö–∞–∫–∏–µ —É —Ç–µ–±—è —Ö–æ–±–±–∏?</i>\n<i>‚Ä¢ –û —á–µ–º —Ç—ã –º–µ—á—Ç–∞–µ—à—å, –∫–∞–∫–∏–µ —É —Ç–µ–±—è —Ü–µ–ª–∏?</i>\n<i>‚Ä¢ –ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –¥–æ–º–∞—à–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω—ã–µ?</i>\n<i>‚Ä¢ –ó–∞–Ω–∏–º–∞–µ—à—å—Å—è –ª–∏ –¥—É—Ö–æ–≤–Ω—ã–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏?</i>\n\n–ú–æ–∂–µ—à—å –æ—Ç–≤–µ—Ç–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–º, –≥–æ–ª–æ—Å–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –∏–ª–∏ –¥–∞–∂–µ –≤–∏–¥–µ–æ!'
  },
  amazing: {
    [Language.ENGLISH]: '<b>Amazing! Thanks for sharing, {name}!</b> üéâ\n\nI\'m so excited to be your journal buddy. Let\'s start this journey together!',
    [Language.RUSSIAN]: '<b>–ü–æ—Ç—Ä—è—Å–∞—é—â–µ! –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è(-–∞—Å—å), {name}!</b> üéâ\n\n–Ø —Ç–∞–∫ —Ä–∞–¥ –±—ã—Ç—å —Ç–≤–æ–∏–º –¥–Ω–µ–≤–Ω–∏–∫–æ–º-–ø–æ–º–æ—â–Ω–∏–∫–æ–º. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤–º–µ—Å—Ç–µ!'
  },
  welcomeAboard: {
    [Language.ENGLISH]: '<b>Welcome aboard, {name}!</b> üéâ\n\nI\'m so excited to be your journal buddy. Let\'s start this journey together!',
    [Language.RUSSIAN]: '<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {name}!</b> üéâ\n\n–Ø —Ç–∞–∫ —Ä–∞–¥ –±—ã—Ç—å —Ç–≤–æ–∏–º –¥–Ω–µ–≤–Ω–∏–∫–æ–º-–ø–æ–º–æ—â–Ω–∏–∫–æ–º. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —ç—Ç–æ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –≤–º–µ—Å—Ç–µ!'
  },
  
  // Main menu
  mainMenu: {
    [Language.ENGLISH]: '<b>Hey {name}!</b> üòä\n\nWhat\'s on your mind today?',
    [Language.RUSSIAN]: '<b>–ü—Ä–∏–≤–µ—Ç, {name}!</b> üòä\n\n–û —á–µ–º –¥—É–º–∞–µ—à—å —Å–µ–≥–æ–¥–Ω—è?'
  },
  createNewEntry: {
    [Language.ENGLISH]: 'üìù Create New Entry',
    [Language.RUSSIAN]: 'üìù –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å'
  },
  viewJournalHistory: {
    [Language.ENGLISH]: 'üìö View Journal History',
    [Language.RUSSIAN]: 'üìö –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –¥–Ω–µ–≤–Ω–∏–∫–∞'
  },
  chatAboutJournal: {
    [Language.ENGLISH]: 'üí¨ Chat About My Journal',
    [Language.RUSSIAN]: 'üí¨ –û–±—Å—É–¥–∏—Ç—å –º–æ–π –¥–Ω–µ–≤–Ω–∏–∫'
  },
  analyzeToday: {
    [Language.ENGLISH]: 'üìä Analyze Today',
    [Language.RUSSIAN]: 'üìä –ê–Ω–∞–ª–∏–∑ —Å–µ–≥–æ–¥–Ω—è—à–Ω–µ–≥–æ –¥–Ω—è'
  },
  settings: {
    [Language.ENGLISH]: '‚öôÔ∏è Settings',
    [Language.RUSSIAN]: '‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏'
  },
  
  // Journal entry
  continueEntry: {
    [Language.ENGLISH]: '<b>Hey {name}!</b>\n\nYou already have an entry in progress. Want to continue where you left off? You can add more thoughts or choose an option below:',
    [Language.RUSSIAN]: '<b>–ü—Ä–∏–≤–µ—Ç, {name}!</b>\n\n–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å –Ω–µ–∑–∞–≤–µ—Ä—à–µ–Ω–Ω–∞—è –∑–∞–ø–∏—Å—å. –•–æ—á–µ—à—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å —Ç–æ–≥–æ –º–µ—Å—Ç–∞, –≥–¥–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è(-–∞—Å—å)? –ú–æ–∂–µ—à—å –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –º—ã—Å–ª–µ–π –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:'
  },
  newEntry: {
    [Language.ENGLISH]: '<b>Let\'s create a new journal entry, {name}!</b> üìù‚ú®\n\nShare whatever\'s on your mind - your thoughts, feelings, experiences... anything at all! You can send text, voice messages, or videos.\n\nI\'m here to listen and help you reflect. When you\'re ready, just choose one of the options below:',
    [Language.RUSSIAN]: '<b>–î–∞–≤–∞–π —Å–æ–∑–¥–∞–¥–∏–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ, {name}!</b> üìù‚ú®\n\n–ü–æ–¥–µ–ª–∏—Å—å –≤—Å–µ–º, —á—Ç–æ —É —Ç–µ–±—è –Ω–∞ —É–º–µ - —Ç–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏, —á—É–≤—Å—Ç–≤–∞–º–∏, –æ–ø—ã—Ç–æ–º... —á–µ–º —É–≥–æ–¥–Ω–æ! –ú–æ–∂–µ—à—å –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç, –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –≤–∏–¥–µ–æ.\n\n–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –≤—ã—Å–ª—É—à–∞—Ç—å –∏ –ø–æ–º–æ—á—å —Ç–µ–±–µ –ø–æ—Ä–∞–∑–º—ã—à–ª—è—Ç—å. –ö–æ–≥–¥–∞ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤(-–∞), –ø—Ä–æ—Å—Ç–æ –≤—ã–±–µ—Ä–∏ –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –Ω–∏–∂–µ:'
  },
  finishEntry: {
    [Language.ENGLISH]: '‚úÖ Finish Entry',
    [Language.RUSSIAN]: '‚úÖ –ó–∞–≤–µ—Ä—à–∏—Ç—å –∑–∞–ø–∏—Å—å'
  },
  goDeeper: {
    [Language.ENGLISH]: 'üîç Go Deeper, Ask Me',
    [Language.RUSSIAN]: 'üîç –ö–æ–ø–Ω—É—Ç—å –≥–ª—É–±–∂–µ'
  },
  cancelEntry: {
    [Language.ENGLISH]: '‚ùå Cancel Entry',
    [Language.RUSSIAN]: '‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å'
  },
  
  // Journal history
  noEntries: {
    [Language.ENGLISH]: '<b>{name}</b>, you haven\'t created any journal entries yet. Let\'s start your journaling journey today!',
    [Language.RUSSIAN]: '<b>{name}</b>, —Ç—ã –µ—â–µ –Ω–µ —Å–æ–∑–¥–∞–ª(–∞) –Ω–∏ –æ–¥–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ. –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º —Ç–≤–æ–π –ø—É—Ç—å –≤–µ–¥–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞ —Å–µ–≥–æ–¥–Ω—è!'
  },
  journalHistory: {
    [Language.ENGLISH]: '<b>Here\'s your journaling history, {name}!</b> üìö\n\nTap on any entry to view it:',
    [Language.RUSSIAN]: '<b>–í–æ—Ç –∏—Å—Ç–æ—Ä–∏—è —Ç–≤–æ–µ–≥–æ –¥–Ω–µ–≤–Ω–∏–∫–∞, {name}!</b> üìö\n\n–ù–∞–∂–º–∏ –Ω–∞ –ª—é–±—É—é –∑–∞–ø–∏—Å—å, —á—Ç–æ–±—ã –ø—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –µ–µ:'
  },
  
  // Chat mode
  noChatEntries: {
    [Language.ENGLISH]: '<b>{name}</b>, you don\'t have any journal entries yet. Let\'s create some first so we can chat about them!',
    [Language.RUSSIAN]: '<b>{name}</b>, —É —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ. –î–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –Ω–µ—Å–∫–æ–ª—å–∫–æ, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ –∏—Ö –æ–±—Å—É–¥–∏—Ç—å!'
  },
  chatIntro: {
    [Language.ENGLISH]: '<b>Hey {name}!</b> üí¨\n\nI\'m all ears and ready to chat about your journal entries!\n\nYou can ask me things like:\n\n<i>‚Ä¢ "What patterns do you notice in my entries?"</i>\n<i>‚Ä¢ "How have my feelings changed over time?"</i>\n<i>‚Ä¢ "What insights can you give me about my recent experiences?"</i>\n\nJust ask away - I\'ll do my best to give you thoughtful insights!',
    [Language.RUSSIAN]: '<b>–ü—Ä–∏–≤–µ—Ç, {name}!</b> üí¨\n\n–Ø –≤–µ—Å—å –≤–Ω–∏–º–∞–Ω–∏–µ –∏ –≥–æ—Ç–æ–≤ –æ–±—Å—É–¥–∏—Ç—å —Ç–≤–æ–∏ –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ!\n\n–¢—ã –º–æ–∂–µ—à—å —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ —Ç–∞–∫–∏—Ö –≤–µ—â–∞—Ö, –∫–∞–∫:\n\n<i>‚Ä¢ "–ö–∞–∫–∏–µ –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–∏ —Ç—ã –∑–∞–º–µ—á–∞–µ—à—å –≤ –º–æ–∏—Ö –∑–∞–ø–∏—Å—è—Ö?"</i>\n<i>‚Ä¢ "–ö–∞–∫ –º–µ–Ω—è–ª–∏—Å—å –º–æ–∏ —á—É–≤—Å—Ç–≤–∞ —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º?"</i>\n<i>‚Ä¢ "–ö–∞–∫–∏–µ –≤—ã–≤–æ–¥—ã —Ç—ã –º–æ–∂–µ—à—å —Å–¥–µ–ª–∞—Ç—å –æ –º–æ–µ–º –Ω–µ–¥–∞–≤–Ω–µ–º –æ–ø—ã—Ç–µ?"</i>\n\n–°–ø—Ä–∞—à–∏–≤–∞–π - —è –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –¥–∞—Ç—å —Ç–µ–±–µ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã!'
  },
  exitChatMode: {
    [Language.ENGLISH]: '‚ùå Exit Chat Mode',
    [Language.RUSSIAN]: '‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è'
  },
  
  // Button responses
  entryCanceled: {
    [Language.ENGLISH]: '<b>No worries, {name}!</b> I\'ve canceled this entry. We can start fresh whenever you\'re ready.',
    [Language.RUSSIAN]: '<b>–ù–µ –±–µ—Å–ø–æ–∫–æ–π—Å—è, {name}!</b> –Ø –æ—Ç–º–µ–Ω–∏–ª —ç—Ç—É –∑–∞–ø–∏—Å—å. –ú—ã –º–æ–∂–µ–º –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ, –∫–æ–≥–¥–∞ —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤(–∞).'
  },
  exitedChatMode: {
    [Language.ENGLISH]: '<b>Alright {name}!</b> We\'re back to the main menu. Let me know if you want to chat again later.',
    [Language.RUSSIAN]: '<b>–•–æ—Ä–æ—à–æ, {name}!</b> –ú—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –î–∞–π –º–Ω–µ –∑–Ω–∞—Ç—å, –µ—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å –ø–æ–æ–±—â–∞—Ç—å—Å—è –ø–æ–∑–∂–µ.'
  },
  
  // Entry view
  journalEntry: {
    [Language.ENGLISH]: '<b>üìù Journal Entry</b> ({date} at {time}):\n\n{content}\n\n<b>üìä Analysis:</b>\n{analysis}',
    [Language.RUSSIAN]: '<b>üìù –ó–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ</b> ({date} –≤ {time}):\n\n{content}\n\n<b>üìä –ê–Ω–∞–ª–∏–∑:</b>\n{analysis}'
  },
  voiceTranscription: {
    [Language.ENGLISH]: 'üéôÔ∏è <b>Voice:</b> {transcription}',
    [Language.RUSSIAN]: 'üéôÔ∏è <b>–ì–æ–ª–æ—Å:</b> {transcription}'
  },
  videoTranscription: {
    [Language.ENGLISH]: 'üé• <b>Video:</b> {transcription}',
    [Language.RUSSIAN]: 'üé• <b>–í–∏–¥–µ–æ:</b> {transcription}'
  },
  
  // Go deeper
  deeperQuestions: {
    [Language.ENGLISH]: '<b>{analysis}</b>\n\n<b>ü§î Let\'s dig a bit deeper:</b>\n\n{questions}',
    [Language.RUSSIAN]: '<b>{analysis}</b>\n\n<b>ü§î –î–∞–≤–∞–π –∫–æ–ø–Ω–µ–º –≥–ª—É–±–∂–µ:</b>\n\n{questions}'
  },
  thoughtsOnQuestions: {
    [Language.ENGLISH]: '<b>What are your thoughts on these questions, {name}?</b> Or would you like to wrap up this entry?',
    [Language.RUSSIAN]: '<b>–ß—Ç–æ —Ç—ã –¥—É–º–∞–µ—à—å –æ–± —ç—Ç–∏—Ö –≤–æ–ø—Ä–æ—Å–∞—Ö, {name}?</b> –ò–ª–∏ —Ö–æ—á–µ—à—å –∑–∞–≤–µ—Ä—à–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?'
  },
  
  // Analyze journal
  noActiveEntry: {
    [Language.ENGLISH]: '<b>Hey {name}</b>, you don\'t have an active journal entry yet. Let\'s create one first!',
    [Language.RUSSIAN]: '<b>–ü—Ä–∏–≤–µ—Ç, {name}</b>, —É —Ç–µ–±—è –µ—â–µ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ. –î–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –æ–¥–Ω—É!'
  },
  entryNotFound: {
    [Language.ENGLISH]: '<b>Hmm, I can\'t seem to find your journal entry.</b> Let\'s start fresh!',
    [Language.RUSSIAN]: '<b>–•–º, –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–≤–æ—é –∑–∞–ø–∏—Å—å –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ.</b> –î–∞–≤–∞–π –Ω–∞—á–Ω–µ–º –∑–∞–Ω–æ–≤–æ!'
  },
  questionsToThinkAbout: {
    [Language.ENGLISH]: '<b>I\'ve been thinking about what you shared, {name}... ü§î</b>\n\n<b>Questions to ponder:</b>\n\n{questions}',
    [Language.RUSSIAN]: '<b>–Ø —Ä–∞–∑–º—ã—à–ª—è–ª –æ —Ç–æ–º, —á–µ–º —Ç—ã –ø–æ–¥–µ–ª–∏–ª—Å—è(-–∞—Å—å), {name}... ü§î</b>\n\n<b>–í–æ–ø—Ä–æ—Å—ã –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:</b>\n\n{questions}'
  },
  shareThoughts: {
    [Language.ENGLISH]: '<b>Feel free to share your thoughts on these questions</b>, or we can wrap up whenever you\'re ready!',
    [Language.RUSSIAN]: '<b>–ù–µ —Å—Ç–µ—Å–Ω—è–π—Å—è –¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏ –ø–æ —ç—Ç–∏–º –≤–æ–ø—Ä–æ—Å–∞–º</b>, –∏–ª–∏ –º—ã –º–æ–∂–µ–º –∑–∞–∫–æ–Ω—á–∏—Ç—å, –∫–æ–≥–¥–∞ —Ç—ã –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤(–∞)!'
  },
  
  // Finish entry
  entrySaved: {
    [Language.ENGLISH]: '<b>Good job, {name}! ‚ú® Entry saved.</b>\n\n<b>üìù Summary:</b>\n{summary}\n\n<b>üí≠ Something to reflect on:</b>\n<i>{question}</i>',
    [Language.RUSSIAN]: '<b>–û—Ç–ª–∏—á–Ω–∞—è —Ä–∞–±–æ—Ç–∞, {name}! ‚ú® –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞.</b>\n\n<b>üìù –ö—Ä–∞—Ç–∫–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:</b>\n{summary}\n\n<b>üí≠ –í–æ–ø—Ä–æ—Å –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è:</b>\n<i>{question}</i>'
  },
  
  // Settings
  settingsTitle: {
    [Language.ENGLISH]: '<b>Settings</b>\n\nHere you can customize your journal experience:',
    [Language.RUSSIAN]: '<b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏</b>\n\n–ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Å–≤–æ–π –æ–ø—ã—Ç –≤–µ–¥–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞:'
  },
  changeLanguage: {
    [Language.ENGLISH]: 'üåê Change Language',
    [Language.RUSSIAN]: 'üåê –ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫'
  },
  backToMainMenu: {
    [Language.ENGLISH]: '‚Ü©Ô∏è Back to Main Menu',
    [Language.RUSSIAN]: '‚Ü©Ô∏è –í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'
  },
  
  // Notifications
  notificationSettings: {
    [Language.ENGLISH]: 'üîî Notification Settings',
    [Language.RUSSIAN]: 'üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'
  },
  notificationsEnabled: {
    [Language.ENGLISH]: '‚úÖ Notifications: ON',
    [Language.RUSSIAN]: '‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–ö–õ'
  },
  notificationsDisabled: {
    [Language.ENGLISH]: '‚ùå Notifications: OFF',
    [Language.RUSSIAN]: '‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: –í–´–ö–õ'
  },
  notificationTime: {
    [Language.ENGLISH]: '‚è∞ Notification Time: {time}',
    [Language.RUSSIAN]: '‚è∞ –í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {time}'
  },
  changeNotificationTime: {
    [Language.ENGLISH]: '‚è∞ Change Time',
    [Language.RUSSIAN]: '‚è∞ –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è'
  },
  enterNotificationTime: {
    [Language.ENGLISH]: 'Please enter the time for daily notifications in 24-hour format (HH:mm), for example: 20:00',
    [Language.RUSSIAN]: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤ 24-—á–∞—Å–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ (–ß–ß:–º–º), –Ω–∞–ø—Ä–∏–º–µ—Ä: 20:00'
  },
  invalidTimeFormat: {
    [Language.ENGLISH]: 'Invalid time format. Please use 24-hour format (HH:mm), for example: 20:00',
    [Language.RUSSIAN]: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≤—Ä–µ–º–µ–Ω–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ 24-—á–∞—Å–æ–≤–æ–π —Ñ–æ—Ä–º–∞—Ç (–ß–ß:–º–º), –Ω–∞–ø—Ä–∏–º–µ—Ä: 20:00'
  },
  timeUpdated: {
    [Language.ENGLISH]: 'Notification time has been updated to {time}',
    [Language.RUSSIAN]: '–í—Ä–µ–º—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞ {time}'
  },
  journalReminder: {
    [Language.ENGLISH]: '‚ú® <b>Time for your daily reflection!</b>\n\nHow about taking a moment to journal about your day?',
    [Language.RUSSIAN]: '‚ú® <b>–í—Ä–µ–º—è –¥–ª—è –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏!</b>\n\n–ö–∞–∫ –Ω–∞—Å—á–µ—Ç —Ç–æ–≥–æ, —á—Ç–æ–±—ã —É–¥–µ–ª–∏—Ç—å –º–∏–Ω—É—Ç–∫—É –∑–∞–ø–∏—Å–∏ –≤ –¥–Ω–µ–≤–Ω–∏–∫ –æ —Å–≤–æ–µ–º –¥–Ω–µ?'
  },
  createEntry: {
    [Language.ENGLISH]: 'üìù Create Entry',
    [Language.RUSSIAN]: 'üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–ø–∏—Å—å'
  },
  skipToday: {
    [Language.ENGLISH]: '‚è≠ Skip Today',
    [Language.RUSSIAN]: '‚è≠ –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è'
  },
  turnOffNotifications: {
    [Language.ENGLISH]: 'üîï Turn Off Notifications',
    [Language.RUSSIAN]: 'üîï –û—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'
  },
  
  // Analyze Today
  analyzeTodayIntro: {
    [Language.ENGLISH]: '<b>Let\'s analyze your day, {name}!</b> üìä\n\nI\'ll look at your entries from today and share some insights.',
    [Language.RUSSIAN]: '<b>–î–∞–≤–∞–π –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–≤–æ–π –¥–µ–Ω—å, {name}!</b> üìä\n\n–Ø –ø–æ—Å–º–æ—Ç—Ä—é –Ω–∞ —Ç–≤–æ–∏ —Å–µ–≥–æ–¥–Ω—è—à–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏ –ø–æ–¥–µ–ª—é—Å—å –Ω–µ–∫–æ—Ç–æ—Ä—ã–º–∏ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è–º–∏.'
  },
  noTodayEntries: {
    [Language.ENGLISH]: '<b>{name}</b>, you don\'t have any journal entries from today. Let\'s create one first!',
    [Language.RUSSIAN]: '<b>{name}</b>, —É —Ç–µ–±—è –Ω–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è. –î–∞–≤–∞–π —Å–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–¥–∏–º –æ–¥–Ω—É!'
  },
  todayAnalysis: {
    [Language.ENGLISH]: '<b>Here\'s my analysis of your day, {name}:</b>\n\n{analysis}\n\n<b>Would you like to discuss this further?</b>',
    [Language.RUSSIAN]: '<b>–í–æ—Ç –º–æ–π –∞–Ω–∞–ª–∏–∑ —Ç–≤–æ–µ–≥–æ –¥–Ω—è, {name}:</b>\n\n{analysis}\n\n<b>–•–æ—á–µ—à—å –æ–±—Å—É–¥–∏—Ç—å —ç—Ç–æ –ø–æ–¥—Ä–æ–±–Ω–µ–µ?</b>'
  },
  
  // Error messages
  errorProcessingVoice: {
    [Language.ENGLISH]: 'Sorry, I had trouble processing your voice message. Could you try sending a text message instead?',
    [Language.RUSSIAN]: '–ò–∑–≤–∏–Ω–∏, —É –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ç–≤–æ–µ–≥–æ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ù–µ –º–æ–≥ –±—ã —Ç—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?'
  },
  errorProcessingVideo: {
    [Language.ENGLISH]: 'Sorry, I had trouble processing your video. Could you try sending a text message instead?',
    [Language.RUSSIAN]: '–ò–∑–≤–∏–Ω–∏, —É –º–µ–Ω—è –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π —Ç–≤–æ–µ–≥–æ –≤–∏–¥–µ–æ. –ù–µ –º–æ–≥ –±—ã —Ç—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ?'
  },
  
  // Transcription
  transcriptionText: {
    [Language.ENGLISH]: '<b>Text:</b>\n\n<code>{transcription}</code>',
    [Language.RUSSIAN]: '<b>–¢–µ–∫—Å—Ç:</b>\n\n<code>{transcription}</code>'
  },
  
  // Chat follow-ups
  anythingElse: {
    [Language.ENGLISH]: '<b>Anything else you\'d like to know about your journal, {name}?</b> I\'m all ears! üëÇ',
    [Language.RUSSIAN]: '<b>–ß—Ç–æ-–Ω–∏–±—É–¥—å –µ—â–µ —Ç—ã —Ö–æ—Ç–µ–ª –±—ã —É–∑–Ω–∞—Ç—å –æ —Å–≤–æ–µ–º –¥–Ω–µ–≤–Ω–∏–∫–µ, {name}?</b> –Ø –≤–µ—Å—å –≤–Ω–∏–º–∞–Ω–∏–µ! üëÇ'
  },
  anyOtherQuestions: {
    [Language.ENGLISH]: '<b>Any other questions about your journaling journey, {name}?</b>',
    [Language.RUSSIAN]: '<b>–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –¥—Ä—É–≥–∏–µ –≤–æ–ø—Ä–æ—Å—ã –æ —Ç–≤–æ–µ–º –ø—É—Ç–∏ –≤–µ–¥–µ–Ω–∏—è –¥–Ω–µ–≤–Ω–∏–∫–∞, {name}?</b>'
  },
  gotMoreQuestions: {
    [Language.ENGLISH]: '<b>Got any more questions for me, {name}?</b> I\'m loving our chat!',
    [Language.RUSSIAN]: '<b>–ï—Å—Ç—å –ª–∏ —É —Ç–µ–±—è –µ—â–µ –≤–æ–ø—Ä–æ—Å—ã –∫–æ –º–Ω–µ, {name}?</b> –ú–Ω–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –Ω–∞—à —Ä–∞–∑–≥–æ–≤–æ—Ä!'
  },
  askMeAnything: {
    [Language.ENGLISH]: '<b>{name}</b>, you can ask me anything about your journal entries! Send me a text, voice message, or video with your question. Or type \'‚ùå Exit Chat Mode\' if you want to return to the main menu.',
    [Language.RUSSIAN]: '<b>{name}</b>, —Ç—ã –º–æ–∂–µ—à—å —Å–ø—Ä–æ—Å–∏—Ç—å –º–µ–Ω—è –æ —á–µ–º —É–≥–æ–¥–Ω–æ –∫–∞—Å–∞—Ç–µ–ª—å–Ω–æ —Ç–≤–æ–∏—Ö –∑–∞–ø–∏—Å–µ–π –≤ –¥–Ω–µ–≤–Ω–∏–∫–µ! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ç–µ–∫—Å—Ç, –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ —Å —Ç–≤–æ–∏–º –≤–æ–ø—Ä–æ—Å–æ–º. –ò–ª–∏ –Ω–∞–ø–∏—à–∏ \'‚ùå –í—ã–π—Ç–∏ –∏–∑ —Ä–µ–∂–∏–º–∞ –æ–±—Å—É–∂–¥–µ–Ω–∏—è\', –µ—Å–ª–∏ —Ö–æ—á–µ—à—å –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.'
  }
};

// In-memory cache of texts
export const texts: TextCollection = { ...defaultTexts };

// Function to load texts from database
export async function loadTextsFromDatabase(): Promise<TextCollection> {
  try {
    // Get all localization texts from database
    const dbTexts = await getAllLocalizationTexts();
    
    // If no texts exist in the database, initialize with default texts
    if (dbTexts.length === 0) {
      await initializeDefaultTexts();
      return defaultTexts;
    }
    
    // Convert database texts to text collection format
    const loadedTexts: TextCollection = {};
    
    for (const dbText of dbTexts) {
      loadedTexts[dbText.key] = {
        [Language.ENGLISH]: dbText.translations[Language.ENGLISH],
        [Language.RUSSIAN]: dbText.translations[Language.RUSSIAN]
      };
    }
    
    return loadedTexts;
  } catch (error) {
    console.error('Error loading localization texts from database:', error);
    return defaultTexts;
  }
}

// Function to initialize default texts in the database
async function initializeDefaultTexts(): Promise<void> {
  try {
    // Group texts by category
    const categories = {
      onboarding: [
        'languageSelection', 'languageChanged', 'welcome', 'niceMeet', 
        'thanks', 'gotIt', 'almostDone', 'amazing', 'welcomeAboard'
      ],
      mainMenu: [
        'mainMenu', 'createNewEntry', 'viewJournalHistory', 
        'chatAboutJournal', 'analyzeToday', 'settings'
      ],
      journalEntry: [
        'continueEntry', 'newEntry', 'finishEntry', 
        'goDeeper', 'cancelEntry'
      ],
      journalHistory: [
        'noEntries', 'journalHistory'
      ],
      chatMode: [
        'noChatEntries', 'chatIntro', 'exitChatMode'
      ],
      buttonResponses: [
        'entryCanceled', 'exitedChatMode'
      ],
      entryView: [
        'journalEntry', 'voiceTranscription', 'videoTranscription'
      ],
      goDeeper: [
        'deeperQuestions', 'thoughtsOnQuestions'
      ],
      analyzeJournal: [
        'noActiveEntry', 'entryNotFound', 'questionsToThinkAbout', 'shareThoughts'
      ],
      finishEntry: [
        'entrySaved'
      ],
      settings: [
        'settingsTitle', 'changeLanguage', 'backToMainMenu'
      ],
      analyzeToday: [
        'analyzeTodayIntro', 'noTodayEntries', 'todayAnalysis'
      ],
      errorMessages: [
        'errorProcessingVoice', 'errorProcessingVideo'
      ],
      transcription: [
        'transcriptionText'
      ],
      chatFollowUps: [
        'anythingElse', 'anyOtherQuestions', 'gotMoreQuestions', 'askMeAnything'
      ]
    };
    
    // Insert each text into the database
    for (const [category, keys] of Object.entries(categories)) {
      for (const key of keys) {
        if (defaultTexts[key]) {
          await upsertLocalizationText(
            key,
            category,
            {
              [Language.ENGLISH]: defaultTexts[key][Language.ENGLISH],
              [Language.RUSSIAN]: defaultTexts[key][Language.RUSSIAN]
            }
          );
        }
      }
      
      console.log(`Default localization texts initialized in database for category: ${category}`);
    }
  } catch (error) {
    console.error('Error initializing default texts in database:', error);
  }
}

// Function to load texts from JSON files (for backward compatibility)
export function loadTextsFromFiles(): TextCollection {
  try {
    // Create directory if it doesn't exist
    if (!fs.existsSync(LOCALIZATION_DIR)) {
      fs.mkdirSync(LOCALIZATION_DIR, { recursive: true });
      
      // Save default texts to files for each category
      saveDefaultTextsToFiles();
      
      return defaultTexts;
    }
    
    // Load all JSON files from the localization directory
    const files = fs.readdirSync(LOCALIZATION_DIR).filter(file => file.endsWith('.json'));
    
    // If no files exist, create them with default texts
    if (files.length === 0) {
      saveDefaultTextsToFiles();
      return defaultTexts;
    }
    
    // Merge all text files into a single collection
    const loadedTexts: TextCollection = {};
    
    for (const file of files) {
      const filePath = path.join(LOCALIZATION_DIR, file);
      const fileContent = fs.readFileSync(filePath, 'utf8');
      const fileTexts = JSON.parse(fileContent) as TextCollection;
      
      // Merge with loaded texts
      Object.assign(loadedTexts, fileTexts);
    }
    
    return loadedTexts;
  } catch (error) {
    console.error('Error loading localization files:', error);
    return defaultTexts;
  }
}

// Function to save default texts to separate files by category (for backward compatibility)
function saveDefaultTextsToFiles() {
  // Group texts by category
  const categories = {
    onboarding: [
      'languageSelection', 'languageChanged', 'welcome', 'niceMeet', 
      'thanks', 'gotIt', 'almostDone', 'amazing', 'welcomeAboard'
    ],
    mainMenu: [
      'mainMenu', 'createNewEntry', 'viewJournalHistory', 
      'chatAboutJournal', 'analyzeToday', 'settings'
    ],
    journalEntry: [
      'continueEntry', 'newEntry', 'finishEntry', 
      'goDeeper', 'cancelEntry'
    ],
    journalHistory: [
      'noEntries', 'journalHistory'
    ],
    chatMode: [
      'noChatEntries', 'chatIntro', 'exitChatMode'
    ],
    buttonResponses: [
      'entryCanceled', 'exitedChatMode'
    ],
    entryView: [
      'journalEntry', 'voiceTranscription', 'videoTranscription'
    ],
    goDeeper: [
      'deeperQuestions', 'thoughtsOnQuestions'
    ],
    analyzeJournal: [
      'noActiveEntry', 'entryNotFound', 'questionsToThinkAbout', 'shareThoughts'
    ],
    finishEntry: [
      'entrySaved'
    ],
    settings: [
      'settingsTitle', 'changeLanguage', 'backToMainMenu'
    ],
    analyzeToday: [
      'analyzeTodayIntro', 'noTodayEntries', 'todayAnalysis'
    ],
    errorMessages: [
      'errorProcessingVoice', 'errorProcessingVideo'
    ],
    transcription: [
      'transcriptionText'
    ],
    chatFollowUps: [
      'anythingElse', 'anyOtherQuestions', 'gotMoreQuestions', 'askMeAnything'
    ]
  };
  
  // Create a file for each category
  for (const [category, keys] of Object.entries(categories)) {
    const categoryTexts: TextCollection = {};
    
    // Add each key to the category
    for (const key of keys) {
      if (defaultTexts[key]) {
        categoryTexts[key] = defaultTexts[key];
      }
    }
    
    // Save to file
    const filePath = path.join(LOCALIZATION_DIR, `${category}.json`);
    fs.writeFileSync(filePath, JSON.stringify(categoryTexts, null, 2), 'utf8');
  }
}

// Initialize texts from database
export async function initializeTexts(): Promise<void> {
  const loadedTexts = await loadTextsFromDatabase();
  Object.assign(texts, loadedTexts);
  console.log('Localization texts loaded from database');
}

// Helper function to get text for a specific key and language
export function getText(key: string, language: Language): string {
  if (!texts[key]) {
    console.warn(`Missing text key: ${key}`);
    return `[Missing text: ${key}]`;
  }
  
  return texts[key][language] || texts[key][Language.ENGLISH] || `[Missing translation: ${key}]`;
}

// Helper function to get text for a user with variable replacement
export function getTextForUser(key: string, user: IUser, variables: Record<string, string> = {}): string {
  const language = user.language || Language.ENGLISH;
  let text = getText(key, language);
  
  // Replace user-specific variables
  text = text.replace(/{name}/g, user.name || user.firstName || '');
  text = text.replace(/{firstName}/g, user.firstName || '');
  
  // Replace custom variables
  for (const [varName, varValue] of Object.entries(variables)) {
    text = text.replace(new RegExp(`{${varName}}`, 'g'), varValue);
  }
  
  return text;
}

// Function to reload texts from database
export async function reloadTexts(): Promise<TextCollection> {
  const reloadedTexts = await loadTextsFromDatabase();
  Object.assign(texts, reloadedTexts);
  return texts;
}

// Function to update a specific text in the database
export async function updateText(key: string, language: Language, newText: string): Promise<boolean> {
  try {
    // Update in database
    const updatedText = await updateTranslation(key, language, newText);
    
    if (!updatedText) {
      console.error(`Text key "${key}" not found in database`);
      return false;
    }
    
    // Update in-memory cache
    if (!texts[key]) {
      texts[key] = { [Language.ENGLISH]: '', [Language.RUSSIAN]: '' };
    }
    texts[key][language] = newText;
    
    return true;
  } catch (error) {
    console.error('Error updating text:', error);
    return false;
  }
}

// Function to export texts to JSON files (for backup)
export async function exportTextsToFiles(): Promise<boolean> {
  try {
    // Get all texts from database
    const dbTexts = await getAllLocalizationTexts();
    
    // Group by category
    const categorizedTexts: Record<string, TextCollection> = {};
    
    for (const dbText of dbTexts) {
      if (!categorizedTexts[dbText.category]) {
        categorizedTexts[dbText.category] = {};
      }
      
      categorizedTexts[dbText.category][dbText.key] = {
        [Language.ENGLISH]: dbText.translations[Language.ENGLISH],
        [Language.RUSSIAN]: dbText.translations[Language.RUSSIAN]
      };
    }
    
    // Create directory if it doesn't exist
    if (!fs.existsSync(LOCALIZATION_DIR)) {
      fs.mkdirSync(LOCALIZATION_DIR, { recursive: true });
    }
    
    // Save each category to a file
    for (const [category, categoryTexts] of Object.entries(categorizedTexts)) {
      const filePath = path.join(LOCALIZATION_DIR, `${category}.json`);
      fs.writeFileSync(filePath, JSON.stringify(categoryTexts, null, 2), 'utf8');
    }
    
    console.log('Texts exported to files successfully');
    return true;
  } catch (error) {
    console.error('Error exporting texts to files:', error);
    return false;
  }
} 